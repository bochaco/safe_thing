@startuml
title **Use Case: Publishing a SAFEthing**

actor "SAFEthing's\nOwner" as owner
participant "Admin\nConsole" as admin
participant SAFEthing as thing
participant "SAFEthing Framework" as framework
participant "SAFE Network" as safenet

owner -> thing: Plug it
activate thing

thing -> thing: Display blinking green light\non thing's panel
thing -> framework: New(thing_id)
activate framework

thing <-- framework: Ok
deactivate framework

thing -> framework: Register(attributes, topics, ...)
activate framework

framework -> safenet: CreateMD( XoRName(thing_id), attributes,\nstatus = 'Connected')
activate safenet

framework <-- safenet: Ok
deactivate safenet

thing <-- framework: Ok(status = 'Connected')
deactivate framework
thing -> thing: Display solid green light\non thing's panel
deactivate thing

...

owner -> admin: Search(thing_id)
activate admin

admin -> framework: GetThingInfo(thing_id)
activate framework

framework -> safenet: FetchMD( XoRName(thing_id))
activate safenet

framework <-- safenet: Ok(Thing info, status = 'Connected')
deactivate safenet

admin <-- framework: Ok(Thing info, status = 'Connected')
deactivate framework

owner <-- admin: Thing's info,\nStatus = 'Connected'
deactivate admin

owner -> admin: Publish(thing_id)
activate admin

admin -> framework: Publish(thing_id)
activate framework

framework -> safenet: UpdateMD( XoRName(thing_id),\nstatus = 'published')
activate safenet

framework <-- safenet: Ok
deactivate safenet

admin <-- framework: Ok(status = 'published')
deactivate framework

owner <-- admin: Status = 'published'
deactivate admin

@enduml
